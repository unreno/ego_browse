##########################################################################
#	Passenger Standalone is built on the same technology that powers
#	Passenger for Nginx, so any configuration option supported by Passenger
#	for Nginx can be applied to Passenger Standalone as well. You can do
#	this by direct editing the Nginx configuration template that is used by
#	Passenger Standalone.
#
#	This file is the original template. DO NOT EDIT THIS FILE DIRECTLY.
#	Instead, make a copy of this file and pass the `--nginx-config-template`
#	parameter to Passenger Standalone.
#
#	Learn more about using the Nginx configuration template at:
#	https://www.phusionpassenger.com/library/config/standalone/intro.html#nginx-configuration-template
#
#	*** NOTE ***
#	If you customize the template file, make sure you keep an eye on the
#	original template file and merge any changes. New Phusion Passenger
#	features may require changes to the template file.
##############################################################

<%= include_passenger_internal_template('global.erb') %>

worker_processes 1;
events {
		worker_connections 4096;
}

http {
		<%= include_passenger_internal_template('http.erb', 4) %>

		### BEGIN your own configuration options ###
		# This is a good place to put your own config
		# options. Note that your options must not
		# conflict with the ones Passenger already sets.
		# Learn more at:
		# https://www.phusionpassenger.com/library/config/standalone/intro.html#nginx-configuration-template

		### END your own configuration options ###

		default_type application/octet-stream;
		types_hash_max_size 2048;
		server_names_hash_bucket_size 64;
		client_max_body_size 1024m;
		access_log off;
		keepalive_timeout 60;
		underscores_in_headers on;
		gzip on;
		gzip_comp_level 3;
		gzip_min_length 150;
		gzip_proxied any;
		gzip_types text/plain text/css text/json text/javascript
				application/javascript application/x-javascript application/json
				application/rss+xml application/vnd.ms-fontobject application/x-font-ttf
				application/xml font/opentype image/svg+xml text/xml;

		<% if @app_finder.multi_mode? %>
				# Default server entry for mass deployment mode.
				server {
						<%= include_passenger_internal_template('mass_deployment_default_server.erb', 12) %>
				}
		<% end %>

		<% for app in @apps %>
		server {
				<%= include_passenger_internal_template('server.erb', 8, true, binding) %>
				<%= include_passenger_internal_template('rails_asset_pipeline.erb', 8, false) %>

				### BEGIN your own configuration options ###
				# This is a good place to put your own config
				# options. Note that your options must not
				# conflict with the ones Passenger already sets.
				# Learn more at:
				# https://www.phusionpassenger.com/library/config/standalone/intro.html#nginx-configuration-template



				#	Doesn't work if I put my settings here?


#	After running "sudo openssl dhparam -out /var/www/dhparams.pem 2048"

#	to fix "Weak Diffie-Hellman and the Logjam Attack" https://weakdh.org/



ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

ssl_prefer_server_ciphers on;

ssl_dhparam /opt/local/apache2/conf/dhparams.pem;





				### END your own configuration options ###
		}
		passenger_pre_start <%= listen_url(app) %>;
		<% end %>

		<%= include_passenger_internal_template('footer.erb', 4) %>



		#	However, if I put them here everything works as expected.

#		I would like to just run on port 80 rather than on 3000 with a redirect to 80,
#		but I can't get 80 to redirect, just yet.

#	As apache is needed for egoweb, perhaps I can use apache to redirect 
#	for port 3000 redirect to https:3443
#	How to force 3443 ssl?

		server {
			#	Every block seems to explicitly need a server name.
			#server_name	dots;
			server_name localhost;
			listen 3000;
			return 301 https://$server_name:3443$request_uri;
		}

#		server{
#			#	Every block seems to explicitly need a server name.
#			server_name 192.168.44.99;
#			listen			 3443;
#			listen			 3000;
#			#return				 301 https://ego.acs.unr.edu:3443$request_uri;
#			return				 301 https://192.168.44.99:3443$request_uri;
#		}

}
