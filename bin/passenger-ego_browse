#!/bin/bash

### BEGIN INIT INFO
# Provides:          passenger-standalone
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Easily start or stop standalone passenger instances
### END INIT INFO

# default config
USER=nobody
APP_DIR=/dev/null
ADDR=127.0.0.1
PORT=3000
ENVIRONMENT=production
RUBY_MANAGER=none


#	updates
USER=ruby
PORT=3000
APP_DIR=/var/www/ego_browse
RUBY_MANAGER=none
ADDR=127.0.0.1
ENVIRONMENT=production



# detect if this is being started at system boot
ISBOOT=0
NAME="$(basename $0)"
if [ "${NAME:0:1}" = "S" -o "${NAME:0:1}" = "K" ]; then
  NAME="${NAME:3}"
  ISBOOT=1
fi

if [ -n "$2" -a -r "/etc/sysconfig/$2" ]; then
  CONFIG="$2"
elif [ -r "/etc/sysconfig/$NAME" ]; then
  CONFIG="$NAME"
fi

if [ -n "$CONFIG" ]; then
  if [ ! -r "/etc/sysconfig/$CONFIG" ]; then
    echo "Error: Configuration '${CONFIG}' not found in /etc/sysconfig/" >&2
    exit 4
  fi
  source "/etc/sysconfig/$CONFIG"
  if [ -z "$APP_DIR" ]; then
    echo "Error: APP_DIR is not defined."
    exit 5
  fi

  if [ "$RUBY_MANAGER" == "none" ]; then
    MANAGER_INIT=""
    PASSENGER_CMD="passenger"
  elif [ "$RUBY_MANAGER" == "rvm" ]; then
    MANAGER_INIT="rvm use $RVM_RUBY;"
    PASSENGER_CMD="passenger"
  elif [ "$RUBY_MANAGER" == "rbenv" ]; then
    MANAGER_INIT=""
    PASSENGER_CMD="bundle exec passenger"
  fi
  CMD_START="cd $APP_DIR; $MANAGER_INIT $PASSENGER_CMD start -a $ADDR -p $PORT -e $ENVIRONMENT -d"
  CMD_STOP="cd $APP_DIR; $MANAGER_INIT $PASSENGER_CMD stop -p $PORT"
fi

. /lib/lsb/init-functions
case "$1" in
  start)
    echo "Starting passenger for ${CONFIG}"
    echo "[$USER] $CMD_START"
    runuser - $USER -c "$CMD_START"
    ;;
  stop)
    echo "Stopping passenger for ${CONFIG}"
    echo "[$USER] $CMD_STOP"
    runuser - $USER -c "$CMD_STOP"
    ;;
  status)
    if [ -f "$APP_DIR/tmp/pids/passenger.${PORT}.pid" ]; then
      PID=$(pidofproc -p "$APP_DIR/tmp/pids/passenger.${PORT}.pid")
      if [ $(ps -p $PID &>/dev/null; echo $?) -eq 0 ]; then
        echo "[$USER] Passenger instance $CONFIG is running ($PID)"
      else
        echo "[$USER] Passenger instance $CONFIG is not running, but lock file exists"
      fi
    else
      echo "[$USER] Passenger instance $CONFIG is not running"
    fi
    ;;
  *)
    echo "Usage: $0 start|stop|status [config]" >&2
    exit 3
    ;;
esac
